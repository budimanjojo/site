<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>linux on Budiman JOJO</title>
    <link>https://budimanjojo.com/tags/linux/</link>
    <description>Recent content in linux on Budiman JOJO</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 28 Oct 2021 16:05:01 +0000</lastBuildDate><atom:link href="https://budimanjojo.com/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Automating Kubernetes Nodes Reboot with Kured</title>
      <link>https://budimanjojo.com/2021/10/28/kured-kubernetes/</link>
      <pubDate>Thu, 28 Oct 2021 16:05:01 +0000</pubDate>
      
      <guid>https://budimanjojo.com/2021/10/28/kured-kubernetes/</guid>
      <description>Introduction Having an up-to-date Kubernetes node is important, especially security updates. Sometimes an update requires a reboot to take effect, and you don’t want to keep checking them manually. In this post, I will share about how I automate my Kubernetes nodes to reboot when necessary using Kured.
Linux Distro Specific Before doing the actual setting up process, every Linux distribution has its own way to decide whether a reboot is required or not.</description>
    </item>
    
    <item>
      <title>Flux Secret Management with SOPS age</title>
      <link>https://budimanjojo.com/2021/10/23/flux-secret-management-with-sops-age/</link>
      <pubDate>Sat, 23 Oct 2021 16:16:41 +0000</pubDate>
      
      <guid>https://budimanjojo.com/2021/10/23/flux-secret-management-with-sops-age/</guid>
      <description>Introduction Following my previous post about Kubernetes management using Flux, this post will cover secret management using SOPS and age. SOPS is a tool to encrypt and decrypt text files while age is the encryption tool that is simple, modern, and secure.
Reasons to Use SOPS and age Flux supports Sealed Secrets and SOPS as secret management, but I prefer SOPS for multiple reasons. You may or may not agree with me.</description>
    </item>
    
    <item>
      <title>How I Manage My Kubernetes Manifests Using Flux</title>
      <link>https://budimanjojo.com/2021/10/20/how-i-manage-my-kubernetes-manifests-using-flux/</link>
      <pubDate>Wed, 20 Oct 2021 18:45:56 +0000</pubDate>
      
      <guid>https://budimanjojo.com/2021/10/20/how-i-manage-my-kubernetes-manifests-using-flux/</guid>
      <description>Introduction GitOps is currently the most popular way to manage your services. It’s sort of what DevOps is but with Git. To put it in a simple way, it is a practice where you manage everything through git. Whatever you have in your git repository is what your cluster current state is. Because GitOps is so popular there are a lot of new tools focusing on GitOps right now, and Flux is one of them.</description>
    </item>
    
    <item>
      <title>Raspberry Pi Media Server Series #4 &amp;#8211; Setting Up Docker</title>
      <link>https://budimanjojo.com/2019/12/18/raspberry-pi-media-server-series-4-setting-up-docker/</link>
      <pubDate>Wed, 18 Dec 2019 01:24:55 +0000</pubDate>
      
      <guid>https://budimanjojo.com/2019/12/18/raspberry-pi-media-server-series-4-setting-up-docker/</guid>
      <description>Introduction This is the forth part of my Raspberry Pi Media Server series. If you haven’t read our previous part, here’s where we discussed setting up external drives on Raspberry Pi. In this part, we are going to setting up Docker on Raspberry Pi. Here’s what you will get if you follow through the end of the tutorial:
Docker and Docker Compose installed Docker data will be in the external drives Systemd will only start Docker if external drives are mounted Getting Started Before we get our hands on setting up docker on our Raspberry Pi, let’s first do a system update.</description>
    </item>
    
    <item>
      <title>Raspberry Pi Media Server Series #1 &amp;#8211; Installing Manjaro</title>
      <link>https://budimanjojo.com/2019/11/25/raspberry-pi-media-server-series-1-installing-manjaro/</link>
      <pubDate>Mon, 25 Nov 2019 00:04:50 +0000</pubDate>
      
      <guid>https://budimanjojo.com/2019/11/25/raspberry-pi-media-server-series-1-installing-manjaro/</guid>
      <description>Introduction So you bought a Raspberry Pi and you don’t know what should you do with it. Well, in this series I want to share my way of using my Raspberry Pi. I bet you already guessed it right by reading the title. Yes, this is the first part of my Raspberry Pi Media Server series. Before I continue, here’s what I have for this project:
A full set of 2GB Raspberry Pi 4 Model B ORICO 3.</description>
    </item>
    
  </channel>
</rss>
